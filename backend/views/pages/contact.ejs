<!-- backend\views\contact.ejs -->


<!-- Содержимое страницы обратной связи -->
<div class="content">
    <div class="content_side__left"></div>
    <div class="content_center">
        <h2>Форма обратной связи</h2>
        <p>Есть вопросы? Напишите нам!</p>

        <form id="contact-form">
            <label class="input-container">
                <span>Ваше имя:</span>
                <input type="text" id="contact-name" name="name" required>
            </label>
            <label class="input-container">
                <span>Ваш Email:</span>
                <input type="email" id="contact-email" name="email" required>
            </label>
            <label class="input-container">
                <span>Сообщение:</span>
                <textarea id="contact-message" name="message" rows="6" required></textarea>
            </label>
            <button type="submit" id="contact-submit-btn">Отправить сообщение</button>
            <div id="contact-form-errors" class="errors-display"></div> <!-- Для вывода ошибок валидации -->
            <div id="contact-form-success" class="success-display"></div> <!-- Для вывода сообщения об успехе -->
        </form>

    </div>
    <div class="content_side__right"></div>
</div>

<script>
    // JS для отправки формы обратной связи
    const contactForm = document.getElementById('contact-form');
    const contactSubmitBtn = document.getElementById('contact-submit-btn');
    const contactErrorsDiv = document.getElementById('contact-form-errors');
    const contactSuccessDiv = document.getElementById('contact-form-success');

    // Функция для обновления состояния кнопки отправки
    function updateContactButtonState() {
        const name = document.getElementById('contact-name').value;
        const email = document.getElementById('contact-email').value;
        const message = document.getElementById('contact-message').value;
        // Кнопка активна, если все поля заполнены
        contactSubmitBtn.disabled = !(name && email && message);
    }

    // Отслеживаем ввод в поля, чтобы включить/выключить кнопку
    document.getElementById('contact-name').addEventListener('input', updateContactButtonState);
    document.getElementById('contact-email').addEventListener('input', updateContactButtonState);
    document.getElementById('contact-message').addEventListener('input', updateContactButtonState);

    // Изначально обновляем состояние кнопки при загрузке страницы
    updateContactButtonState();


    contactForm.addEventListener('submit', async (e) => {
        e.preventDefault(); // Предотвращаем стандартную отправку формы

        contactErrorsDiv.innerHTML = ''; // Очищаем предыдущие ошибки
        contactSuccessDiv.innerHTML = ''; // Очищаем предыдущие сообщения

        const formData = new FormData(contactForm);
        const data = Object.fromEntries(formData.entries()); // Преобразуем FormData в объект

        try {
            const response = await fetch('/api/contact', { // Отправляем на новый API маршрут
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });

            const result = await response.json(); // Ожидаем JSON ответ от сервера

            updateResponse({ status: response.status, statusText: response.statusText }); // Обновляем статус в футере

            if (response.ok) {
                // Успех (200 или 201)
                contactSuccessDiv.innerHTML = `<p style="color: green;">${result.message || 'Сообщение отправлено!'}</p>`;
                contactForm.reset(); // Очищаем форму при успехе
                updateContactButtonState(); // Обновляем состояние кнопки
            } else {
                // Ошибка (например, 400 ValidationError, 500 Internal Server Error)
                if (response.status === 400 && result.errors) {
                    // Обработка ошибок валидации
                    let errorHtml = '<ul>';
                    result.errors.forEach(err => {
                        errorHtml += `<li>${err.msg}</li>`; // Отображаем сообщение ошибки из express-validator
                    });
                    errorHtml += '</ul>';
                    contactErrorsDiv.innerHTML = `<div style="color: red;">${errorHtml}</div>`;
                } else {
                    // Другие ошибки сервера
                    contactErrorsDiv.innerHTML = `<p style="color: red;">Ошибка: ${result.error || response.statusText}</p>`;
                }
            }

        } catch (error) {
            console.error('Error sending message:', error);
            updateResponse(error);
            contactErrorsDiv.innerHTML = `<p style="color: red;">Произошла ошибка при отправке сообщения.</p>`;
        }
    });

</script>